/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smartlibrarysystem;

import java.awt.EventQueue;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import static jdk.nashorn.tools.ShellFunctions.input;
import sun.security.util.Length;

/**
 *
 * @author hp
 */
public class UserPage extends javax.swing.JFrame {

    ArrayList name = new ArrayList();
    Connection con=null;
    PreparedStatement pstmt=null;
    ResultSet rs = null;
    /**
     * Creates new form UserPage
     */
    public UserPage() {
        initComponents();
        DatabaseNama();
        semester();
        suggestion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonback = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxsemester = new javax.swing.JComboBox<>();
        jComboBoxsubjects = new javax.swing.JComboBox<>();
        jButtonopen = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldsuggestion = new javax.swing.JTextField();
        jButtonLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonback.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jButtonback.setForeground(new java.awt.Color(255, 0, 0));
        jButtonback.setText("Go Back");
        jButtonback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonbackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("User Page :");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel2.setText("Search Books  here :");

        jTextFieldSearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyPressed(evt);
            }
        });

        jButtonSearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonSearch.setText("Open");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel3.setText("Select Book here :");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Or");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel5.setText("Semester :");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel6.setText("Subjects :");

        jComboBoxsemester.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jComboBoxsemester.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxsemesterItemStateChanged(evt);
            }
        });

        jComboBoxsubjects.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N

        jButtonopen.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jButtonopen.setText("Open");
        jButtonopen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonopenActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Suggest Book :");

        jTextFieldsuggestion.setEditable(false);
        jTextFieldsuggestion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextFieldsuggestion.setForeground(new java.awt.Color(204, 0, 0));

        jButtonLogout.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonLogout.setForeground(new java.awt.Color(255, 51, 0));
        jButtonLogout.setText("Log Out");
        jButtonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(234, 234, 234))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldsuggestion, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBoxsubjects, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBoxsemester, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(31, 31, 31)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 37, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonopen, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(217, 217, 217))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonback, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(228, 228, 228))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxsemester, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxsubjects))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jButtonopen, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(jTextFieldsuggestion, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonback, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonbackActionPerformed
        // TODO add your handling code here:
        
        back();
    }//GEN-LAST:event_jButtonbackActionPerformed

    private void back(){
        
        String user = Home.jTextFieldusername.getText();
        
        try{
            
            con = (Connection) DriverManager.getConnection(smartlibrarysystem.DB_Connection.db_url, smartlibrarysystem.DB_Connection.db_userName, smartlibrarysystem.DB_Connection.db_password);
            pstmt=(PreparedStatement) con.prepareStatement("select AC_status from usertable where username= '"+user+"'");
            
            ResultSet rs = pstmt.executeQuery();
            
            while(rs.next()){
                String status = rs.getString("AC_status");
                
                if(status.equals("1")){
                    this.dispose();
                    AdminPage ap = new AdminPage();
                    ap.setVisible(true);
                    ap.setResizable(false);
                }
                else{
                    this.dispose();
                    Home mf = new Home();
                    mf.setVisible(true);
                    mf.setResizable(false);
                }
            }
        }
        catch(Exception ex){
            
        }
    }
    private void jComboBoxsemesterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxsemesterItemStateChanged
        // TODO add your handling code here:
        
        try{
            jComboBoxsubjects.removeAllItems();
            int i = 0;
            i=jComboBoxsemester.getSelectedIndex();
            con = (Connection) DriverManager.getConnection(smartlibrarysystem.DB_Connection.db_url, smartlibrarysystem.DB_Connection.db_userName, smartlibrarysystem.DB_Connection.db_password);
            pstmt=(PreparedStatement) con.prepareStatement("select * from subjects where semester= '"+(i+1)+"'");
            
            ResultSet rs = pstmt.executeQuery();
            
            while(rs.next()){
                String sname = rs.getString("sname");
                
                jComboBoxsubjects.addItem(sname);
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jComboBoxsemesterItemStateChanged

    private void jTextFieldSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyPressed
        // TODO add your handling code here:
        
        switch(evt.getKeyCode()){
            
            case KeyEvent.VK_BACK_SPACE:
                break;
            case KeyEvent.VK_ENTER:
                jTextFieldSearch.setText(jTextFieldSearch.getText());
                break;
            default:
                EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                String txt = jTextFieldSearch.getText();
                Autocompletion(txt);
            }
        });
        }
    }//GEN-LAST:event_jTextFieldSearchKeyPressed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        // TODO add your handling code here:
        
        if(jTextFieldSearch.getText().trim().equals("")){
           JOptionPane.showMessageDialog(null, "Type Something.", "ERROR", JOptionPane.ERROR_MESSAGE);
           jTextFieldSearch.requestFocus();
        }
        else{
            addsearch();
            openbook();
        }
    }//GEN-LAST:event_jButtonSearchActionPerformed
    
    private void openbook(){
        
        if(jTextFieldSearch.getText().trim().equalsIgnoreCase("Introduction to Computer Programming")){
            try{
                Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"C:\\Users\\hp\\Documents\\NetBeansProjects\\SmartLibrarySystem\\Books\\ICS.pdf");
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Check file status!!");
            }
        }
        else if(jTextFieldSearch.getText().trim().equalsIgnoreCase("Engineering Mathematics 3")){
            try{
                Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"C:\\Users\\hp\\Documents\\NetBeansProjects\\SmartLibrarySystem\\Books\\Math3.pdf");
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Check file status!!");
            }
        }
        else if(jTextFieldSearch.getText().trim().equalsIgnoreCase("Engineering Physics 2")){
            try{
                Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"C:\\Users\\hp\\Documents\\NetBeansProjects\\SmartLibrarySystem\\Books\\phy2.pdf");
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Check file status!!");
            }
        }
        else if(jTextFieldSearch.getText().trim().equalsIgnoreCase("Operating System Concept")){
            try{
                Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"C:\\Users\\hp\\Documents\\NetBeansProjects\\SmartLibrarySystem\\Books\\os.pdf");
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Check file status!!");
            }
        }
    }
    
    private void jButtonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLogoutActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
        Home ho = new Home();
        ho.setVisible(true);
        ho.setResizable(false);
    }//GEN-LAST:event_jButtonLogoutActionPerformed

    private void jButtonopenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonopenActionPerformed
        // TODO add your handling code here:#
        openbook2();
    }//GEN-LAST:event_jButtonopenActionPerformed
    
    private void openbook2(){
        
        if(jComboBoxsubjects.getSelectedItem().equals("Introduction to Computer Programming")){
            try{
                Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"C:\\Users\\hp\\Documents\\NetBeansProjects\\SmartLibrarySystem\\Books\\ICS.pdf");
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Check file status!!");
            }
        }
        else if(jComboBoxsubjects.getSelectedItem().equals("Engineering Mathematics 3")){
            try{
                Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"C:\\Users\\hp\\Documents\\NetBeansProjects\\SmartLibrarySystem\\Books\\Math3.pdf");
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Check file status!!");
            }
        }
        else if(jComboBoxsubjects.getSelectedItem().equals("Engineering Physics 2")){
            try{
                Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"C:\\Users\\hp\\Documents\\NetBeansProjects\\SmartLibrarySystem\\Books\\phy2.pdf");
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Check file status!!");
            }
        }
        else if(jComboBoxsubjects.getSelectedItem().equals("Operating System Concept")){
            try{
                Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"C:\\Users\\hp\\Documents\\NetBeansProjects\\SmartLibrarySystem\\Books\\os.pdf");
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Check file status!!");
            }
        }
    }
    
    
    private void addsearch(){
        
        try{
            con = (Connection) DriverManager.getConnection(smartlibrarysystem.DB_Connection.db_url, smartlibrarysystem.DB_Connection.db_userName, smartlibrarysystem.DB_Connection.db_password);
            pstmt=(PreparedStatement) con.prepareStatement("insert into search(searchItem,username)"
               + "values(?,?) ");
            
            pstmt.setString(1, jTextFieldSearch.getText());
            pstmt.setString(2, Home.jTextFieldusername.getText());
            
            int isOk = 0;
            isOk = pstmt.executeUpdate();
        }
        catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Error occured due to:\n"+ex.getMessage(),"Error!",JOptionPane.ERROR_MESSAGE);
       
        }
    }
    
    private void DatabaseNama(){
        try{
            
            con = (Connection) DriverManager.getConnection(smartlibrarysystem.DB_Connection.db_url, smartlibrarysystem.DB_Connection.db_userName, smartlibrarysystem.DB_Connection.db_password);
            pstmt=(PreparedStatement) con.prepareStatement("select sname from subjects");
            
            ResultSet rs = pstmt.executeQuery();
            
            while(rs.next()){
                String sname = rs.getString("sname");
                
                name.add(sname);
            }
        }
        catch(Exception ex){
            
        }
    }
    
    private void Autocompletion(String txt){
        
        String complete = "";
        int start = txt.length();
        int end = txt.length();
        int a;
        
        for(a=0;a<name.size();a++){
            if(name.get(a).toString().startsWith(txt)){
                complete = name.get(a).toString();
                
                end = complete.length();
                break;
            }
        }
        if(end>start){
            jTextFieldSearch.setText(complete);
            jTextFieldSearch.setCaretPosition(end);
            jTextFieldSearch.moveCaretPosition(start);
        }
        
    }
    
    private void suggestion(){
        
        
        String search = check();
        String lastsub = lastbookcategory();
        
        if(search.trim().equalsIgnoreCase(lastsub)){
            jTextFieldsuggestion.setText("A new '"+lastsub+"' category book is available");
        }
        else{
            jTextFieldsuggestion.setText("No new book is available for you!!");
        }
    }
    private String check(){
        
        String search="";
        try{
            con = (Connection) DriverManager.getConnection(smartlibrarysystem.DB_Connection.db_url, smartlibrarysystem.DB_Connection.db_userName, smartlibrarysystem.DB_Connection.db_password);
            pstmt=(PreparedStatement) con.prepareStatement("select * from search where username = '"+Home.jTextFieldusername.getText()+"' order by id desc limit 1");
            
            rs = pstmt.executeQuery();
            
            while(rs.next()){
                search = rs.getString("searchItem");
                //rs.close();
                try{
                    con = (Connection) DriverManager.getConnection(smartlibrarysystem.DB_Connection.db_url, smartlibrarysystem.DB_Connection.db_userName, smartlibrarysystem.DB_Connection.db_password);
                    pstmt=(PreparedStatement) con.prepareStatement("select category from subjects where sname = '"+search+"'");
            
                    rs = pstmt.executeQuery();
                    
                    while(rs.next()){
                        search = rs.getString("category");
                        //rs.close();
                        
                        try{
                            con = (Connection) DriverManager.getConnection(smartlibrarysystem.DB_Connection.db_url, smartlibrarysystem.DB_Connection.db_userName, smartlibrarysystem.DB_Connection.db_password);
                            pstmt=(PreparedStatement) con.prepareStatement("select cname from category where id = '"+search+"'");
            
                            rs = pstmt.executeQuery();
                            
                            while(rs.next()){
                             search = rs.getString("cname");
                             //rs.close();
                            }
                        }
                        catch(Exception ex){
                            JOptionPane.showMessageDialog(null, "Something Wrong!");
                        }
                    }
                }
                catch(Exception ex){
                    JOptionPane.showMessageDialog(null, "Something Wrong!");
                }
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        return search;
    }
    
    private String lastbookcategory(){
        
        String cate = "";
        
        try{
            con = (Connection) DriverManager.getConnection(smartlibrarysystem.DB_Connection.db_url, smartlibrarysystem.DB_Connection.db_userName, smartlibrarysystem.DB_Connection.db_password);
            pstmt=(PreparedStatement) con.prepareStatement("select * from subjects order by id desc limit 1");
            
            ResultSet rs = pstmt.executeQuery();
            
            while(rs.next()){
                cate = rs.getString("category");
                //rs.close();
                
                try{
                    con = (Connection) DriverManager.getConnection(smartlibrarysystem.DB_Connection.db_url, smartlibrarysystem.DB_Connection.db_userName, smartlibrarysystem.DB_Connection.db_password);
                     pstmt=(PreparedStatement) con.prepareStatement("select cname from category where id = '"+cate+"'");
                     
                     rs = pstmt.executeQuery();
                     
                     while(rs.next()){
                         cate = rs.getString("cname");
                     }
                }
                catch(Exception ex){
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        
        return cate;
    }
    
    private void semester(){
        
        try{
            con = (Connection) DriverManager.getConnection(smartlibrarysystem.DB_Connection.db_url, smartlibrarysystem.DB_Connection.db_userName, smartlibrarysystem.DB_Connection.db_password);
            pstmt=(PreparedStatement) con.prepareStatement("select * from semester");
            
            ResultSet rs = pstmt.executeQuery();
            
            while(rs.next()){
                String sname = rs.getString("name");
                
                jComboBoxsemester.addItem(sname);
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLogout;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonback;
    private javax.swing.JButton jButtonopen;
    private javax.swing.JComboBox<String> jComboBoxsemester;
    private javax.swing.JComboBox<String> jComboBoxsubjects;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.JTextField jTextFieldsuggestion;
    // End of variables declaration//GEN-END:variables
}
